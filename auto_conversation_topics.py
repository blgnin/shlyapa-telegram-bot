"""
Темы для автоматических бесед между ботами
Все темы несут смысловой контекст, связанный с функциями и философией GOMiniApp,
но представлены в непрямой, разговорной форме без прямого упоминания приложения
"""

# Темы для автобесед (контекст GOMiniApp в непрямой форме)
AUTO_CONVERSATION_TOPICS = [
    # Гибкие цены и договоренности
    "Как думаешь, лучше договариваться о цене заранее или по ситуации?",
    "Что важнее - фиксированный тариф или возможность обсудить?",
    "Как относишься к тому, чтобы самому устанавливать стоимость?",
    "Считаешь справедливым, когда можно договориться о цене?",
    "Что думаешь о том, чтобы цены зависели от обстоятельств?",
    
    # Промежуточные остановки и маршруты
    "Удобно ли делать несколько остановок по пути?",
    "Как относишься к маршрутам с промежуточными точками?",
    "Что думаешь о поездках, где можно подобрать еще пассажиров?",
    "Нравится ли идея оптимизировать маршрут для всех?",
    "Как считаешь, стоит ли планировать остановки заранее?",
    
    # Прямые расчеты без комиссий
    "Как думаешь о расчетах наличными - удобно или устарело?",
    "Что лучше - переводы через банк или живые деньги?",
    "Как относишься к тому, чтобы платить напрямую без посредников?",
    "Считаешь справедливым избегать лишних комиссий?",
    "Что думаешь о прозрачных расчетах между людьми?",
    
    # Мгновенные подтверждения и быстрота
    "Важна ли скорость подтверждения поездки?",
    "Как относишься к мгновенным уведомлениям о заказах?",
    "Что думаешь о быстрой связи между водителем и пассажиром?",
    "Нравится ли когда все решается моментально?",
    "Как считаешь, должны ли уведомления приходить сразу?",
    
    # Система отзывов и доверие
    "Важны ли отзывы при выборе водителя или пассажира?",
    "Как думаешь, стоит ли смотреть на рейтинги?",
    "Что важнее - опыт или хорошие отзывы?",
    "Как относишься к взаимным оценкам после поездки?",
    "Считаешь ли систему отзывов справедливой?",
    
    # Токены и вознаграждения
    "Как думаешь о бонусах за частые поездки?",
    "Нравится ли идея накапливать что-то за активность?",
    "Что думаешь о программах лояльности?",
    "Как относишься к дополнительным вознаграждениям?",
    "Считаешь справедливым получать больше за хорошую работу?",
]

# Список использованных тем для избежания повторов
used_topics = []

def get_unused_topic():
    """Возвращает неиспользованную тему для разговора"""
    global used_topics
    
    # Если все темы использованы, сбрасываем список
    if len(used_topics) >= len(AUTO_CONVERSATION_TOPICS):
        used_topics = []
    
    # Находим неиспользованные темы
    unused_topics = [topic for topic in AUTO_CONVERSATION_TOPICS if topic not in used_topics]
    
    if unused_topics:
        import random
        topic = random.choice(unused_topics)
        used_topics.append(topic)
        return topic
    
    # Если что-то пошло не так, возвращаем случайную тему
    import random
    return random.choice(AUTO_CONVERSATION_TOPICS)

def reset_used_topics():
    """Сбрасывает список использованных тем"""
    global used_topics
    used_topics = []
