"""
–ü—Ä–æ—Å—Ç–æ–π –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –¥–ª—è Fly.io
–†–∞–±–æ—Ç–∞–µ—Ç –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ —Å Telegram –±–æ—Ç–∞–º–∏
"""
import asyncio
from aiohttp import web
import os
import logging

logger = logging.getLogger(__name__)

async def handle_root(request):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ—Ä–Ω–µ–≤–æ–≥–æ URL."""
    logger.info("Received request for /")
    status = {
        "status": "‚úÖ Telegram Userbot System —Ä–∞–±–æ—Ç–∞–µ—Ç!",
        "service": "shlyapa-bot",
        "bots": ["Daniel", "Leonardo", "Alevtina"],
        "environment": "Fly.io Production"
    }
    return web.json_response(status)

async def handle_health(request):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è."""
    logger.info("Received request for /health")
    return web.Response(text="OK")

async def start_web_server():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –ø—Ä–∞–≤–∏–ª—å–Ω–æ –¥–ª—è asyncio."""
    app = web.Application()
    app.router.add_get('/', handle_root)
    app.router.add_get('/health', handle_health)
    
    port = int(os.environ.get("PORT", 8000))
    logger.info(f"Starting web server on port {port}")
    
    runner = web.AppRunner(app)
    await runner.setup()
    site = web.TCPSite(runner, '0.0.0.0', port)
    await site.start()
    logger.info(f"Web server started on http://0.0.0.0:{port}")
    return runner

if __name__ == "__main__":
    start_web_server()
    
    # –î–µ—Ä–∂–∏–º —Å–µ—Ä–≤–µ—Ä –∞–∫—Ç–∏–≤–Ω—ã–º
    try:
        while True:
            import time
            time.sleep(1)
    except KeyboardInterrupt:
        print("üõë –í–µ–±-—Å–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
