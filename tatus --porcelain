[1mdiff --git a/Dockerfile b/Dockerfile[m
[1mindex caaaaa6..3366a65 100644[m
[1m--- a/Dockerfile[m
[1m+++ b/Dockerfile[m
[36m@@ -1,5 +1,5 @@[m
 FROM python:3.11-slim[m
[31m-# Force rebuild v2 - 2025-08-08-11:50[m
[32m+[m[32m# Force rebuild v3 - 2025-08-08-14:05 - FINAL[m
 [m
 # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é[m
 WORKDIR /app[m
[1mdiff --git a/__pycache__/ai_handler.cpython-311.pyc b/__pycache__/ai_handler.cpython-311.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..b08cfd3[m
Binary files /dev/null and b/__pycache__/ai_handler.cpython-311.pyc differ
[1mdiff --git a/__pycache__/main.cpython-311.pyc b/__pycache__/main.cpython-311.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..dff75ad[m
Binary files /dev/null and b/__pycache__/main.cpython-311.pyc differ
[1mdiff --git a/__pycache__/main_render.cpython-311.pyc b/__pycache__/main_render.cpython-311.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..0233563[m
Binary files /dev/null and b/__pycache__/main_render.cpython-311.pyc differ
[1mdiff --git a/__pycache__/userbot_manager.cpython-311.pyc b/__pycache__/userbot_manager.cpython-311.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..6e9e000[m
Binary files /dev/null and b/__pycache__/userbot_manager.cpython-311.pyc differ
[1mdiff --git a/ai_handler.py b/ai_handler.py[m
[1mindex b0fc144..33ff01b 100644[m
[1m--- a/ai_handler.py[m
[1m+++ b/ai_handler.py[m
[36m@@ -1,4 +1,4 @@[m
[31m-import openai[m
[32m+[m[32mfrom openai import OpenAI[m
 import random[m
 import json[m
 import logging[m
[36m@@ -9,8 +9,8 @@[m [mfrom natural_speech_handler import NaturalSpeechHandler[m
 logging.basicConfig(level=logging.INFO)[m
 logger = logging.getLogger(__name__)[m
 [m
[31m-# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è OpenAI[m
[31m-openai.api_key = OPENAI_API_KEY[m
[32m+[m[32m# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è OpenAI (–Ω–æ–≤—ã–π API)[m
[32m+[m[32mclient = OpenAI(api_key=OPENAI_API_KEY)[m
 [m
 # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–π —Ä–µ—á–∏[m
 natural_speech = NaturalSpeechHandler()[m
[36m@@ -37,7 +37,7 @@[m [mclass AIHandler:[m
 –û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∫–æ—Ä–æ—Ç–∫–∏–º (1-2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è).[m
 """[m
             [m
[31m-            response = openai.ChatCompletion.create([m
[32m+[m[32m            response = client.chat.completions.create([m
                 model=AI_MODEL,[m
                 messages=[[m
                     {"role": "system", "content": full_prompt},[m
[1mdiff --git a/main_render.py b/main_render.py[m
[1mindex b373e3c..075a8e5 100644[m
[1m--- a/main_render.py[m
[1m+++ b/main_render.py[m
[36m@@ -45,9 +45,7 @@[m [masync def main():[m
         [m
         # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –¥–ª—è Fly.io[m
         logger.info("üåê –ó–∞–ø—É—Å–∫ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è Fly.io...")[m
[31m-        web_server = start_web_server()[m
[31m-        # –î–∞–µ–º –≤—Ä–µ–º—è —Å–µ—Ä–≤–µ—Ä—É –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è[m
[31m-        await asyncio.sleep(2)[m
[32m+[m[32m        web_server = await start_web_server()[m
         logger.info("‚úÖ –í–µ–±-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ")[m
         [m
         # –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä —é–∑–µ—Ä-–±–æ—Ç–æ–≤[m
[1mdiff --git a/web_server.py b/web_server.py[m
[1mindex df0de5b..932c60f 100644[m
[1m--- a/web_server.py[m
[1m+++ b/web_server.py[m
[36m@@ -25,8 +25,8 @@[m [masync def handle_health(request):[m
     logger.info("Received request for /health")[m
     return web.Response(text="OK")[m
 [m
[31m-def start_web_server():[m
[31m-    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π –∑–∞–¥–∞—á–µ."""[m
[32m+[m[32masync def start_web_server():[m
[32m+[m[32m    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –ø—Ä–∞–≤–∏–ª—å–Ω–æ –¥–ª—è asyncio."""[m
     app = web.Application()[m
     app.router.add_get('/', handle_root)[m
     app.router.add_get('/health', handle_health)[m
[36m@@ -35,9 +35,9 @@[m [mdef start_web_server():[m
     logger.info(f"Starting web server on port {port}")[m
     [m
     runner = web.AppRunner(app)[m
[31m-    asyncio.create_task(runner.setup())[m
[32m+[m[32m    await runner.setup()[m
     site = web.TCPSite(runner, '0.0.0.0', port)[m
[31m-    asyncio.create_task(site.start())[m
[32m+[m[32m    await site.start()[m
     logger.info(f"Web server started on http://0.0.0.0:{port}")[m
     return runner[m
 [m
